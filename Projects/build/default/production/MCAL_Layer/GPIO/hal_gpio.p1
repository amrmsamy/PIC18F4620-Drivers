Version 4.0 HI-TECH Software Intermediate Code
"1381 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1825
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2047
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"993
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1105
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1217
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1329
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"190
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"361
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"536
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"678
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"82 MCAL_Layer/GPIO/hal_gpio.h
[; ;MCAL_Layer/GPIO/hal_gpio.h: 82: {
[s S272 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S272 . port pin direction logic ]
"48 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 48:         }
[c E2793 0 1 .. ]
[n E2793 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
"88
[; ;MCAL_Layer/GPIO/hal_gpio.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config, logic_t logic)
[c E2789 0 1 .. ]
[n E2789 . GPIO_LOW GPIO_HIGH  ]
"195
[; ;MCAL_Layer/GPIO/hal_gpio.c: 195: Std_ReturnType gpio_port_direction_intialize(port_index_t port, direction_t direction)
[c E2807 0 1 2 3 4 .. ]
[n E2807 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"10 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 10: volatile uint8 *tris_registers[] = {&TRISA, &TRISB, &TRISC, &TRISD, &TRISE};
[v _tris_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_registers
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"12
[; ;MCAL_Layer/GPIO/hal_gpio.c: 12: volatile uint8 *lat_registers[] = {&LATA, &LATB, &LATC, &LATD, &LATE};
[v _lat_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_registers
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"14
[; ;MCAL_Layer/GPIO/hal_gpio.c: 14: volatile uint8 *port_registers[] = {&PORTA, &PORTB, &PORTC, &PORTD, &PORTE};
[v _port_registers `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_registers
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"27
[; ;MCAL_Layer/GPIO/hal_gpio.c: 27: Std_ReturnType gpio_pin_direction_intialize(const pin_config_t *_pin_config)
[v _gpio_pin_direction_intialize `(uc ~T0 @X0 1 ef1`*CS272 ]
"28
[; ;MCAL_Layer/GPIO/hal_gpio.c: 28: {
{
[e :U _gpio_pin_direction_intialize ]
"27
[; ;MCAL_Layer/GPIO/hal_gpio.c: 27: Std_ReturnType gpio_pin_direction_intialize(const pin_config_t *_pin_config)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
"28
[; ;MCAL_Layer/GPIO/hal_gpio.c: 28: {
[f ]
"29
[; ;MCAL_Layer/GPIO/hal_gpio.c: 29:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"30
[; ;MCAL_Layer/GPIO/hal_gpio.c: 30:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 274  ]
"31
[; ;MCAL_Layer/GPIO/hal_gpio.c: 31:     {
{
"32
[; ;MCAL_Layer/GPIO/hal_gpio.c: 32:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"33
[; ;MCAL_Layer/GPIO/hal_gpio.c: 33:     }
}
[e $U 275  ]
"34
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34:     else
[e :U 274 ]
"35
[; ;MCAL_Layer/GPIO/hal_gpio.c: 35:     {
{
"36
[; ;MCAL_Layer/GPIO/hal_gpio.c: 36:         switch(_pin_config->direction)
[e $U 277  ]
"37
[; ;MCAL_Layer/GPIO/hal_gpio.c: 37:         {
{
"38
[; ;MCAL_Layer/GPIO/hal_gpio.c: 38:             case GPIO_DIRECTION_OUTPUT :
[e :U 278 ]
"39
[; ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 (*tris_registers[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"40
[; ;MCAL_Layer/GPIO/hal_gpio.c: 40:                 break;
[e $U 276  ]
"42
[; ;MCAL_Layer/GPIO/hal_gpio.c: 42:             case GPIO_DIRECTION_INPUT :
[e :U 279 ]
"43
[; ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 (*tris_registers[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"44
[; ;MCAL_Layer/GPIO/hal_gpio.c: 44:                 break;
[e $U 276  ]
"46
[; ;MCAL_Layer/GPIO/hal_gpio.c: 46:             default :
[e :U 280 ]
"47
[; ;MCAL_Layer/GPIO/hal_gpio.c: 47:                 ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"48
[; ;MCAL_Layer/GPIO/hal_gpio.c: 48:         }
}
[e $U 276  ]
[e :U 277 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2793 0 278
 , $ . `E2793 1 279
 280 ]
[e :U 276 ]
"49
[; ;MCAL_Layer/GPIO/hal_gpio.c: 49:     }
}
[e :U 275 ]
"51
[; ;MCAL_Layer/GPIO/hal_gpio.c: 51:     return ret;
[e ) _ret ]
[e $UE 273  ]
"52
[; ;MCAL_Layer/GPIO/hal_gpio.c: 52: }
[e :UE 273 ]
}
"64
[; ;MCAL_Layer/GPIO/hal_gpio.c: 64: Std_ReturnType gpio_pin_get_direction_status(const pin_config_t *_pin_config, direction_t *directio_status)
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS272`*E2793 ]
"65
[; ;MCAL_Layer/GPIO/hal_gpio.c: 65: {
{
[e :U _gpio_pin_get_direction_status ]
"64
[; ;MCAL_Layer/GPIO/hal_gpio.c: 64: Std_ReturnType gpio_pin_get_direction_status(const pin_config_t *_pin_config, direction_t *directio_status)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _directio_status `*E2793 ~T0 @X0 1 r2 ]
"65
[; ;MCAL_Layer/GPIO/hal_gpio.c: 65: {
[f ]
"66
[; ;MCAL_Layer/GPIO/hal_gpio.c: 66:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"67
[; ;MCAL_Layer/GPIO/hal_gpio.c: 67:     if(((void*)0) == _pin_config || ((void*)0) == directio_status || _pin_config->pin > 8 -1)
[e $ ! || || == -> -> -> 0 `i `*v `*CS272 __pin_config == -> -> -> 0 `i `*v `*E2793 _directio_status > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 282  ]
"68
[; ;MCAL_Layer/GPIO/hal_gpio.c: 68:     {
{
"69
[; ;MCAL_Layer/GPIO/hal_gpio.c: 69:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"70
[; ;MCAL_Layer/GPIO/hal_gpio.c: 70:     }
}
[e $U 283  ]
"71
[; ;MCAL_Layer/GPIO/hal_gpio.c: 71:     else
[e :U 282 ]
"72
[; ;MCAL_Layer/GPIO/hal_gpio.c: 72:     {
{
"73
[; ;MCAL_Layer/GPIO/hal_gpio.c: 73:         *directio_status = ((*tris_registers[_pin_config->port] >> _pin_config->pin) & (uint8)1);
[e = *U _directio_status -> & >> -> *U *U + &U _tris_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_registers `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2793 ]
"74
[; ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }
}
[e :U 283 ]
"75
[; ;MCAL_Layer/GPIO/hal_gpio.c: 75:     return ret;
[e ) _ret ]
[e $UE 281  ]
"76
[; ;MCAL_Layer/GPIO/hal_gpio.c: 76: }
[e :UE 281 ]
}
"88
[; ;MCAL_Layer/GPIO/hal_gpio.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config, logic_t logic)
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS272`E2789 ]
"89
[; ;MCAL_Layer/GPIO/hal_gpio.c: 89: {
{
[e :U _gpio_pin_write_logic ]
"88
[; ;MCAL_Layer/GPIO/hal_gpio.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config, logic_t logic)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _logic `E2789 ~T0 @X0 1 r2 ]
"89
[; ;MCAL_Layer/GPIO/hal_gpio.c: 89: {
[f ]
"90
[; ;MCAL_Layer/GPIO/hal_gpio.c: 90:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"91
[; ;MCAL_Layer/GPIO/hal_gpio.c: 91:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 285  ]
"92
[; ;MCAL_Layer/GPIO/hal_gpio.c: 92:     {
{
"93
[; ;MCAL_Layer/GPIO/hal_gpio.c: 93:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"94
[; ;MCAL_Layer/GPIO/hal_gpio.c: 94:     }
}
[e $U 286  ]
"95
[; ;MCAL_Layer/GPIO/hal_gpio.c: 95:     else
[e :U 285 ]
"96
[; ;MCAL_Layer/GPIO/hal_gpio.c: 96:     {
{
"97
[; ;MCAL_Layer/GPIO/hal_gpio.c: 97:         switch(logic)
[e $U 288  ]
"98
[; ;MCAL_Layer/GPIO/hal_gpio.c: 98:         {
{
"99
[; ;MCAL_Layer/GPIO/hal_gpio.c: 99:             case GPIO_LOW :
[e :U 289 ]
"100
[; ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 (*lat_registers[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"101
[; ;MCAL_Layer/GPIO/hal_gpio.c: 101:                 break;
[e $U 287  ]
"103
[; ;MCAL_Layer/GPIO/hal_gpio.c: 103:             case GPIO_HIGH :
[e :U 290 ]
"104
[; ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 (*lat_registers[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"105
[; ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 break;
[e $U 287  ]
"107
[; ;MCAL_Layer/GPIO/hal_gpio.c: 107:             default :
[e :U 291 ]
"108
[; ;MCAL_Layer/GPIO/hal_gpio.c: 108:                 ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"109
[; ;MCAL_Layer/GPIO/hal_gpio.c: 109:         }
}
[e $U 287  ]
[e :U 288 ]
[e [\ -> _logic `ui , $ -> . `E2789 0 `ui 289
 , $ -> . `E2789 1 `ui 290
 291 ]
[e :U 287 ]
"110
[; ;MCAL_Layer/GPIO/hal_gpio.c: 110:     }
}
[e :U 286 ]
"111
[; ;MCAL_Layer/GPIO/hal_gpio.c: 111:     return ret;
[e ) _ret ]
[e $UE 284  ]
"112
[; ;MCAL_Layer/GPIO/hal_gpio.c: 112: }
[e :UE 284 ]
}
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: Std_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config, logic_t *logic)
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS272`*E2789 ]
"125
[; ;MCAL_Layer/GPIO/hal_gpio.c: 125: {
{
[e :U _gpio_pin_read_logic ]
"124
[; ;MCAL_Layer/GPIO/hal_gpio.c: 124: Std_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config, logic_t *logic)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _logic `*E2789 ~T0 @X0 1 r2 ]
"125
[; ;MCAL_Layer/GPIO/hal_gpio.c: 125: {
[f ]
"126
[; ;MCAL_Layer/GPIO/hal_gpio.c: 126:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"127
[; ;MCAL_Layer/GPIO/hal_gpio.c: 127:     if(((void*)0) == _pin_config || ((void*)0) == logic || _pin_config->pin > 8 -1)
[e $ ! || || == -> -> -> 0 `i `*v `*CS272 __pin_config == -> -> -> 0 `i `*v `*E2789 _logic > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 293  ]
"128
[; ;MCAL_Layer/GPIO/hal_gpio.c: 128:     {
{
"129
[; ;MCAL_Layer/GPIO/hal_gpio.c: 129:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"130
[; ;MCAL_Layer/GPIO/hal_gpio.c: 130:     }
}
[e $U 294  ]
"131
[; ;MCAL_Layer/GPIO/hal_gpio.c: 131:     else
[e :U 293 ]
"132
[; ;MCAL_Layer/GPIO/hal_gpio.c: 132:     {
{
"133
[; ;MCAL_Layer/GPIO/hal_gpio.c: 133:         *logic = ((*port_registers[_pin_config->port] >> _pin_config->pin) & (uint8)1);
[e = *U _logic -> & >> -> *U *U + &U _port_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _port_registers `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2789 ]
"134
[; ;MCAL_Layer/GPIO/hal_gpio.c: 134:     }
}
[e :U 294 ]
"135
[; ;MCAL_Layer/GPIO/hal_gpio.c: 135:     return ret;
[e ) _ret ]
[e $UE 292  ]
"136
[; ;MCAL_Layer/GPIO/hal_gpio.c: 136: }
[e :UE 292 ]
}
"148
[; ;MCAL_Layer/GPIO/hal_gpio.c: 148: Std_ReturnType gpio_pin_toggle_logic(const pin_config_t *_pin_config)
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS272 ]
"149
[; ;MCAL_Layer/GPIO/hal_gpio.c: 149: {
{
[e :U _gpio_pin_toggle_logic ]
"148
[; ;MCAL_Layer/GPIO/hal_gpio.c: 148: Std_ReturnType gpio_pin_toggle_logic(const pin_config_t *_pin_config)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
"149
[; ;MCAL_Layer/GPIO/hal_gpio.c: 149: {
[f ]
"150
[; ;MCAL_Layer/GPIO/hal_gpio.c: 150:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"151
[; ;MCAL_Layer/GPIO/hal_gpio.c: 151:     if(((void*)0) == _pin_config || _pin_config->port > 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config > -> . *U __pin_config 0 `i - -> 8 `i -> 1 `i 296  ]
"152
[; ;MCAL_Layer/GPIO/hal_gpio.c: 152:     {
{
"153
[; ;MCAL_Layer/GPIO/hal_gpio.c: 153:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"154
[; ;MCAL_Layer/GPIO/hal_gpio.c: 154:     }
}
[e $U 297  ]
"155
[; ;MCAL_Layer/GPIO/hal_gpio.c: 155:     else
[e :U 296 ]
"156
[; ;MCAL_Layer/GPIO/hal_gpio.c: 156:     {
{
"157
[; ;MCAL_Layer/GPIO/hal_gpio.c: 157:         (*lat_registers[_pin_config->port] ^= ((uint8)1 << _pin_config->pin));
[e =^ *U *U + &U _lat_registers * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_registers `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"158
[; ;MCAL_Layer/GPIO/hal_gpio.c: 158:     }
}
[e :U 297 ]
"159
[; ;MCAL_Layer/GPIO/hal_gpio.c: 159:     return ret;
[e ) _ret ]
[e $UE 295  ]
"160
[; ;MCAL_Layer/GPIO/hal_gpio.c: 160: }
[e :UE 295 ]
}
"171
[; ;MCAL_Layer/GPIO/hal_gpio.c: 171: Std_ReturnType gpio_pin_intialize(const pin_config_t *_pin_config)
[v _gpio_pin_intialize `(uc ~T0 @X0 1 ef1`*CS272 ]
"172
[; ;MCAL_Layer/GPIO/hal_gpio.c: 172: {
{
[e :U _gpio_pin_intialize ]
"171
[; ;MCAL_Layer/GPIO/hal_gpio.c: 171: Std_ReturnType gpio_pin_intialize(const pin_config_t *_pin_config)
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
"172
[; ;MCAL_Layer/GPIO/hal_gpio.c: 172: {
[f ]
"173
[; ;MCAL_Layer/GPIO/hal_gpio.c: 173:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"174
[; ;MCAL_Layer/GPIO/hal_gpio.c: 174:     if(((void*)0) == _pin_config || _pin_config->pin > 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 299  ]
"175
[; ;MCAL_Layer/GPIO/hal_gpio.c: 175:     {
{
"176
[; ;MCAL_Layer/GPIO/hal_gpio.c: 176:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"177
[; ;MCAL_Layer/GPIO/hal_gpio.c: 177:     }
}
[e $U 300  ]
"178
[; ;MCAL_Layer/GPIO/hal_gpio.c: 178:     else
[e :U 299 ]
"179
[; ;MCAL_Layer/GPIO/hal_gpio.c: 179:     {
{
"180
[; ;MCAL_Layer/GPIO/hal_gpio.c: 180:         ret = gpio_pin_direction_intialize(_pin_config);
[e = _ret ( _gpio_pin_direction_intialize (1 __pin_config ]
"181
[; ;MCAL_Layer/GPIO/hal_gpio.c: 181:         ret = gpio_pin_write_logic(_pin_config, _pin_config->logic);
[e = _ret ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E2789 ]
"182
[; ;MCAL_Layer/GPIO/hal_gpio.c: 182:     }
}
[e :U 300 ]
"183
[; ;MCAL_Layer/GPIO/hal_gpio.c: 183:     return ret;
[e ) _ret ]
[e $UE 298  ]
"184
[; ;MCAL_Layer/GPIO/hal_gpio.c: 184: }
[e :UE 298 ]
}
"195
[; ;MCAL_Layer/GPIO/hal_gpio.c: 195: Std_ReturnType gpio_port_direction_intialize(port_index_t port, direction_t direction)
[v _gpio_port_direction_intialize `(uc ~T0 @X0 1 ef2`E2807`E2793 ]
"196
[; ;MCAL_Layer/GPIO/hal_gpio.c: 196: {
{
[e :U _gpio_port_direction_intialize ]
"195
[; ;MCAL_Layer/GPIO/hal_gpio.c: 195: Std_ReturnType gpio_port_direction_intialize(port_index_t port, direction_t direction)
[v _port `E2807 ~T0 @X0 1 r1 ]
[v _direction `E2793 ~T0 @X0 1 r2 ]
"196
[; ;MCAL_Layer/GPIO/hal_gpio.c: 196: {
[f ]
"197
[; ;MCAL_Layer/GPIO/hal_gpio.c: 197:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"198
[; ;MCAL_Layer/GPIO/hal_gpio.c: 198:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 302  ]
"199
[; ;MCAL_Layer/GPIO/hal_gpio.c: 199:     {
{
"200
[; ;MCAL_Layer/GPIO/hal_gpio.c: 200:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"201
[; ;MCAL_Layer/GPIO/hal_gpio.c: 201:     }
}
[e $U 303  ]
"202
[; ;MCAL_Layer/GPIO/hal_gpio.c: 202:     else
[e :U 302 ]
"203
[; ;MCAL_Layer/GPIO/hal_gpio.c: 203:     {
{
"204
[; ;MCAL_Layer/GPIO/hal_gpio.c: 204:         *tris_registers[port] = direction;
[e = *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux -> _direction `uc ]
"205
[; ;MCAL_Layer/GPIO/hal_gpio.c: 205:     }
}
[e :U 303 ]
"206
[; ;MCAL_Layer/GPIO/hal_gpio.c: 206:     return ret;
[e ) _ret ]
[e $UE 301  ]
"207
[; ;MCAL_Layer/GPIO/hal_gpio.c: 207: }
[e :UE 301 ]
}
"220
[; ;MCAL_Layer/GPIO/hal_gpio.c: 220: Std_ReturnType gpio_port_get_direction_status(port_index_t port, direction_t *direction_status)
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E2807`*E2793 ]
"221
[; ;MCAL_Layer/GPIO/hal_gpio.c: 221: {
{
[e :U _gpio_port_get_direction_status ]
"220
[; ;MCAL_Layer/GPIO/hal_gpio.c: 220: Std_ReturnType gpio_port_get_direction_status(port_index_t port, direction_t *direction_status)
[v _port `E2807 ~T0 @X0 1 r1 ]
[v _direction_status `*E2793 ~T0 @X0 1 r2 ]
"221
[; ;MCAL_Layer/GPIO/hal_gpio.c: 221: {
[f ]
"222
[; ;MCAL_Layer/GPIO/hal_gpio.c: 222:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"223
[; ;MCAL_Layer/GPIO/hal_gpio.c: 223:     if(((void*)0) == direction_status || port > 5 -1)
[e $ ! || == -> -> -> 0 `i `*v `*E2793 _direction_status > -> _port `ui -> - -> 5 `i -> 1 `i `ui 305  ]
"224
[; ;MCAL_Layer/GPIO/hal_gpio.c: 224:     {
{
"225
[; ;MCAL_Layer/GPIO/hal_gpio.c: 225:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"226
[; ;MCAL_Layer/GPIO/hal_gpio.c: 226:     }
}
[e $U 306  ]
"227
[; ;MCAL_Layer/GPIO/hal_gpio.c: 227:     else
[e :U 305 ]
"228
[; ;MCAL_Layer/GPIO/hal_gpio.c: 228:     {
{
"229
[; ;MCAL_Layer/GPIO/hal_gpio.c: 229:         *direction_status = *tris_registers[port];
[e = *U _direction_status -> *U *U + &U _tris_registers * -> _port `ux -> -> # *U &U _tris_registers `ui `ux `E2793 ]
"230
[; ;MCAL_Layer/GPIO/hal_gpio.c: 230:     }
}
[e :U 306 ]
"231
[; ;MCAL_Layer/GPIO/hal_gpio.c: 231:     return ret;
[e ) _ret ]
[e $UE 304  ]
"232
[; ;MCAL_Layer/GPIO/hal_gpio.c: 232: }
[e :UE 304 ]
}
"236
[; ;MCAL_Layer/GPIO/hal_gpio.c: 236: Std_ReturnType gpio_port_write_logic(port_index_t port, logic_t logic)
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E2807`E2789 ]
"237
[; ;MCAL_Layer/GPIO/hal_gpio.c: 237: {
{
[e :U _gpio_port_write_logic ]
"236
[; ;MCAL_Layer/GPIO/hal_gpio.c: 236: Std_ReturnType gpio_port_write_logic(port_index_t port, logic_t logic)
[v _port `E2807 ~T0 @X0 1 r1 ]
[v _logic `E2789 ~T0 @X0 1 r2 ]
"237
[; ;MCAL_Layer/GPIO/hal_gpio.c: 237: {
[f ]
"238
[; ;MCAL_Layer/GPIO/hal_gpio.c: 238:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"239
[; ;MCAL_Layer/GPIO/hal_gpio.c: 239:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 308  ]
"240
[; ;MCAL_Layer/GPIO/hal_gpio.c: 240:     {
{
"241
[; ;MCAL_Layer/GPIO/hal_gpio.c: 241:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"242
[; ;MCAL_Layer/GPIO/hal_gpio.c: 242:     }
}
[e $U 309  ]
"243
[; ;MCAL_Layer/GPIO/hal_gpio.c: 243:     else
[e :U 308 ]
"244
[; ;MCAL_Layer/GPIO/hal_gpio.c: 244:     {
{
"245
[; ;MCAL_Layer/GPIO/hal_gpio.c: 245:         *lat_registers[port] = logic;
[e = *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux -> _logic `uc ]
"246
[; ;MCAL_Layer/GPIO/hal_gpio.c: 246:     }
}
[e :U 309 ]
"247
[; ;MCAL_Layer/GPIO/hal_gpio.c: 247:     return ret;
[e ) _ret ]
[e $UE 307  ]
"248
[; ;MCAL_Layer/GPIO/hal_gpio.c: 248: }
[e :UE 307 ]
}
"261
[; ;MCAL_Layer/GPIO/hal_gpio.c: 261: Std_ReturnType gpio_port_read_logic(port_index_t port, logic_t *logic)
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E2807`*E2789 ]
"262
[; ;MCAL_Layer/GPIO/hal_gpio.c: 262: {
{
[e :U _gpio_port_read_logic ]
"261
[; ;MCAL_Layer/GPIO/hal_gpio.c: 261: Std_ReturnType gpio_port_read_logic(port_index_t port, logic_t *logic)
[v _port `E2807 ~T0 @X0 1 r1 ]
[v _logic `*E2789 ~T0 @X0 1 r2 ]
"262
[; ;MCAL_Layer/GPIO/hal_gpio.c: 262: {
[f ]
"263
[; ;MCAL_Layer/GPIO/hal_gpio.c: 263:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"264
[; ;MCAL_Layer/GPIO/hal_gpio.c: 264:     if(port > 5 -1 || ((void*)0) == logic)
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*E2789 _logic 311  ]
"265
[; ;MCAL_Layer/GPIO/hal_gpio.c: 265:     {
{
"266
[; ;MCAL_Layer/GPIO/hal_gpio.c: 266:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"267
[; ;MCAL_Layer/GPIO/hal_gpio.c: 267:     }
}
[e $U 312  ]
"268
[; ;MCAL_Layer/GPIO/hal_gpio.c: 268:     else
[e :U 311 ]
"269
[; ;MCAL_Layer/GPIO/hal_gpio.c: 269:     {
{
"270
[; ;MCAL_Layer/GPIO/hal_gpio.c: 270:         *logic = *lat_registers[port];
[e = *U _logic -> *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux `E2789 ]
"271
[; ;MCAL_Layer/GPIO/hal_gpio.c: 271:     }
}
[e :U 312 ]
"272
[; ;MCAL_Layer/GPIO/hal_gpio.c: 272:     return ret;
[e ) _ret ]
[e $UE 310  ]
"273
[; ;MCAL_Layer/GPIO/hal_gpio.c: 273: }
[e :UE 310 ]
}
"284
[; ;MCAL_Layer/GPIO/hal_gpio.c: 284: Std_ReturnType gpio_port_toggle_logic(port_index_t port)
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E2807 ]
"285
[; ;MCAL_Layer/GPIO/hal_gpio.c: 285: {
{
[e :U _gpio_port_toggle_logic ]
"284
[; ;MCAL_Layer/GPIO/hal_gpio.c: 284: Std_ReturnType gpio_port_toggle_logic(port_index_t port)
[v _port `E2807 ~T0 @X0 1 r1 ]
"285
[; ;MCAL_Layer/GPIO/hal_gpio.c: 285: {
[f ]
"286
[; ;MCAL_Layer/GPIO/hal_gpio.c: 286:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"287
[; ;MCAL_Layer/GPIO/hal_gpio.c: 287:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 314  ]
"288
[; ;MCAL_Layer/GPIO/hal_gpio.c: 288:     {
{
"289
[; ;MCAL_Layer/GPIO/hal_gpio.c: 289:         Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"290
[; ;MCAL_Layer/GPIO/hal_gpio.c: 290:     }
}
[e $U 315  ]
"291
[; ;MCAL_Layer/GPIO/hal_gpio.c: 291:     else
[e :U 314 ]
"292
[; ;MCAL_Layer/GPIO/hal_gpio.c: 292:     {
{
"293
[; ;MCAL_Layer/GPIO/hal_gpio.c: 293:         *lat_registers[port] ^= 0xFF ;
[e =^ *U *U + &U _lat_registers * -> _port `ux -> -> # *U &U _lat_registers `ui `ux -> -> 255 `i `uc ]
"294
[; ;MCAL_Layer/GPIO/hal_gpio.c: 294:     }
}
[e :U 315 ]
"295
[; ;MCAL_Layer/GPIO/hal_gpio.c: 295:     return ret;
[e ) _ret ]
[e $UE 313  ]
"296
[; ;MCAL_Layer/GPIO/hal_gpio.c: 296: }
[e :UE 313 ]
}
