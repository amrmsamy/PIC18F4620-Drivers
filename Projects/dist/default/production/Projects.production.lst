

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jun 19 15:33:53 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  00FEC2                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _port_registers
    60  00FEC2  80                 	db	128
    61  00FEC3  0F                 	db	15
    62  00FEC4  81                 	db	129
    63  00FEC5  0F                 	db	15
    64  00FEC6  82                 	db	130
    65  00FEC7  0F                 	db	15
    66  00FEC8  83                 	db	131
    67  00FEC9  0F                 	db	15
    68  00FECA  84                 	db	132
    69  00FECB  0F                 	db	15
    70                           
    71                           ;initializer for _lat_registers
    72  00FECC  89                 	db	137
    73  00FECD  0F                 	db	15
    74  00FECE  8A                 	db	138
    75  00FECF  0F                 	db	15
    76  00FED0  8B                 	db	139
    77  00FED1  0F                 	db	15
    78  00FED2  8C                 	db	140
    79  00FED3  0F                 	db	15
    80  00FED4  8D                 	db	141
    81  00FED5  0F                 	db	15
    82                           
    83                           ;initializer for _tris_registers
    84  00FED6  92                 	db	146
    85  00FED7  0F                 	db	15
    86  00FED8  93                 	db	147
    87  00FED9  0F                 	db	15
    88  00FEDA  94                 	db	148
    89  00FEDB  0F                 	db	15
    90  00FEDC  95                 	db	149
    91  00FEDD  0F                 	db	15
    92  00FEDE  96                 	db	150
    93  00FEDF  0F                 	db	15
    94                           
    95                           ;initializer for _btn_1
    96  00FEE0  43                 	db	67
    97                           
    98                           ;initializer for _led_3
    99  00FEE1  12                 	db	18
   100                           
   101                           ;initializer for _led_2
   102  00FEE2  0A                 	db	10
   103                           
   104                           ;initializer for _led_1
   105  00FEE3  3A                 	db	58
   106  0000                     _PORTE	set	3972
   107  0000                     _PORTD	set	3971
   108  0000                     _PORTC	set	3970
   109  0000                     _PORTB	set	3969
   110  0000                     _PORTA	set	3968
   111  0000                     _LATE	set	3981
   112  0000                     _LATD	set	3980
   113  0000                     _LATC	set	3979
   114  0000                     _LATB	set	3978
   115  0000                     _LATA	set	3977
   116  0000                     _TRISE	set	3990
   117  0000                     _TRISD	set	3989
   118  0000                     _TRISC	set	3988
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISA	set	3986
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125  00FEE4                     __pcinit:
   126                           	callstack 0
   127  00FEE4                     start_initialization:
   128                           	callstack 0
   129  00FEE4                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (34 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134  00FEE4  0EC2               	movlw	low __pidataCOMRAM
   135  00FEE6  6EF6               	movwf	tblptrl,c
   136  00FEE8  0EFE               	movlw	high __pidataCOMRAM
   137  00FEEA  6EF7               	movwf	tblptrh,c
   138  00FEEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139  00FEEE  6EF8               	movwf	tblptru,c
   140  00FEF0  EE00  F001         	lfsr	0,__pdataCOMRAM
   141  00FEF4  EE10 F022          	lfsr	1,34
   142  00FEF8                     copy_data0:
   143  00FEF8  0009               	tblrd		*+
   144  00FEFA  CFF5 FFEE          	movff	tablat,postinc0
   145  00FEFE  50E5               	movf	postdec1,w,c
   146  00FF00  50E1               	movf	fsr1l,w,c
   147  00FF02  E1FA               	bnz	copy_data0
   148                           
   149                           ; Clear objects allocated to COMRAM (3 bytes)
   150  00FF04  6A2D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   151  00FF06  6A2C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   152  00FF08  6A2B               	clrf	__pbssCOMRAM& (0+255),c
   153  00FF0A                     end_of_initialization:
   154                           	callstack 0
   155  00FF0A                     __end_of__initialization:
   156                           	callstack 0
   157  00FF0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158  00FF0C  6EF8               	movwf	tblptru,c
   159  00FF0E  0100               	movlb	0
   160  00FF10  EF8A  F07F         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMRAM
   163  00002B                     __pbssCOMRAM:
   164                           	callstack 0
   165  00002B                     _btn1_st:
   166                           	callstack 0
   167  00002B                     	ds	1
   168  00002C                     _led_1_st:
   169                           	callstack 0
   170  00002C                     	ds	1
   171  00002D                     _ret:
   172                           	callstack 0
   173  00002D                     	ds	1
   174                           
   175                           	psect	dataCOMRAM
   176  000001                     __pdataCOMRAM:
   177                           	callstack 0
   178  000001                     _port_registers:
   179                           	callstack 0
   180  000001                     	ds	10
   181  00000B                     _lat_registers:
   182                           	callstack 0
   183  00000B                     	ds	10
   184  000015                     _tris_registers:
   185                           	callstack 0
   186  000015                     	ds	10
   187  00001F                     _btn_1:
   188                           	callstack 0
   189  00001F                     	ds	1
   190  000020                     _led_3:
   191                           	callstack 0
   192  000020                     	ds	1
   193  000021                     _led_2:
   194                           	callstack 0
   195  000021                     	ds	1
   196  000022                     _led_1:
   197                           	callstack 0
   198  000022                     	ds	1
   199                           
   200                           	psect	cstackCOMRAM
   201  000023                     __pcstackCOMRAM:
   202                           	callstack 0
   203  000023                     ??_gpio_port_toggle_logic:
   204  000023                     gpio_port_direction_intialize@direction:
   205                           	callstack 0
   206  000023                     gpio_port_write_logic@logic:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x0
   210  000023                     	ds	1
   211  000024                     ??_gpio_port_direction_intialize:
   212  000024                     ??_gpio_port_write_logic:
   213                           
   214                           ; 1 bytes @ 0x1
   215  000024                     	ds	3
   216  000027                     gpio_port_toggle_logic@port:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x4
   220  000027                     	ds	1
   221  000028                     gpio_port_direction_intialize@port:
   222                           	callstack 0
   223  000028                     gpio_port_write_logic@port:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x5
   227  000028                     	ds	1
   228  000029                     ??_main:
   229                           
   230                           ; 1 bytes @ 0x6
   231  000029                     	ds	2
   232                           
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 45 in file "application.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  2  145[None  ] int 
   245 ;; Registers used:
   246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   256 ;;Total ram usage:        2 bytes
   257 ;; Hardware stack levels required when called:    1
   258 ;; This function calls:
   259 ;;		_gpio_port_direction_intialize
   260 ;;		_gpio_port_toggle_logic
   261 ;;		_gpio_port_write_logic
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text0
   268  00FF14                     __ptext0:
   269                           	callstack 0
   270  00FF14                     _main:
   271                           	callstack 30
   272  00FF14                     
   273                           ;application.c: 47:     gpio_port_direction_intialize(PORTC_INDEX, 0x00);
   274  00FF14  0E00               	movlw	0
   275  00FF16  6E23               	movwf	gpio_port_direction_intialize@direction^0,c
   276  00FF18  0E02               	movlw	2
   277  00FF1A  ECA6  F07F         	call	_gpio_port_direction_intialize
   278                           
   279                           ;application.c: 48:     gpio_port_write_logic(PORTC_INDEX, 0x55);
   280  00FF1E  0E55               	movlw	85
   281  00FF20  6E23               	movwf	gpio_port_write_logic@logic^0,c
   282  00FF22  0E02               	movlw	2
   283  00FF24  ECE2  F07F         	call	_gpio_port_write_logic
   284  00FF28                     l146:
   285                           
   286                           ;application.c: 51:     {;application.c: 52:         gpio_port_toggle_logic(PORTC_INDEX)
      +                          ;
   287  00FF28  0E02               	movlw	2
   288  00FF2A  ECC4  F07F         	call	_gpio_port_toggle_logic
   289  00FF2E                     
   290                           ;application.c: 54:         _delay((unsigned long)((250)*(4000000/4000.0)));
   291  00FF2E  0E02               	movlw	2
   292  00FF30  6E2A               	movwf	(??_main+1)^0,c
   293  00FF32  0E45               	movlw	69
   294  00FF34  6E29               	movwf	??_main^0,c
   295  00FF36  0EAA               	movlw	170
   296  00FF38                     u337:
   297  00FF38  2EE8               	decfsz	wreg,f,c
   298  00FF3A  D7FE               	bra	u337
   299  00FF3C  2E29               	decfsz	??_main^0,f,c
   300  00FF3E  D7FC               	bra	u337
   301  00FF40  2E2A               	decfsz	(??_main+1)^0,f,c
   302  00FF42  D7FA               	bra	u337
   303  00FF44  EF94  F07F         	goto	l146
   304  00FF48  EF00  F000         	goto	start
   305  00FF4C                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _gpio_port_write_logic *****************
   309 ;; Defined at:
   310 ;;		line 236 in file "MCAL_Layer/GPIO/hal_gpio.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  port            1    wreg     enum E2807
   313 ;;  logic           1    0[COMRAM] enum E2789
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  port            1    5[COMRAM] enum E2807
   316 ;;  ret             1    0        unsigned char 
   317 ;;  ret             1    0        unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      unsigned char 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        6 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341  00FFC4                     __ptext1:
   342                           	callstack 0
   343  00FFC4                     _gpio_port_write_logic:
   344                           	callstack 30
   345                           
   346                           ;incstack = 0
   347                           ;gpio_port_write_logic@port stored from wreg
   348  00FFC4  6E28               	movwf	gpio_port_write_logic@port^0,c
   349  00FFC6                     
   350                           ;MCAL_Layer/GPIO/hal_gpio.c: 239:     if(port > 5 -1)
   351  00FFC6  0E04               	movlw	4
   352  00FFC8  6428               	cpfsgt	gpio_port_write_logic@port^0,c
   353  00FFCA  EFE9  F07F         	goto	u321
   354  00FFCE  EFEB  F07F         	goto	u320
   355  00FFD2                     u321:
   356  00FFD2  EFED  F07F         	goto	l1006
   357  00FFD6                     u320:
   358  00FFD6                     
   359                           ;MCAL_Layer/GPIO/hal_gpio.c: 242:     }
   360  00FFD6  EFFF  F07F         	goto	l105
   361  00FFDA                     l1006:
   362                           
   363                           ;MCAL_Layer/GPIO/hal_gpio.c: 244:     {;MCAL_Layer/GPIO/hal_gpio.c: 245:         *lat_re
      +                          gisters[port] = logic;
   364  00FFDA  5028               	movf	gpio_port_write_logic@port^0,w,c
   365  00FFDC  0D02               	mullw	2
   366  00FFDE  0E0B               	movlw	low _lat_registers
   367  00FFE0  24F3               	addwf	243,w,c
   368  00FFE2  6ED9               	movwf	fsr2l,c
   369  00FFE4  0E00               	movlw	high _lat_registers
   370  00FFE6  20F4               	addwfc	prodh,w,c
   371  00FFE8  6EDA               	movwf	fsr2h,c
   372  00FFEA  CFDE F024          	movff	postinc2,??_gpio_port_write_logic
   373  00FFEE  CFDD F025          	movff	postdec2,??_gpio_port_write_logic+1
   374  00FFF2  C024  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   375  00FFF6  C025  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   376  00FFFA  C023  FFDF         	movff	gpio_port_write_logic@logic,indf2
   377  00FFFE                     l105:
   378  00FFFE  0012               	return		;funcret
   379  010000                     __end_of_gpio_port_write_logic:
   380                           	callstack 0
   381                           
   382 ;; *************** function _gpio_port_toggle_logic *****************
   383 ;; Defined at:
   384 ;;		line 284 in file "MCAL_Layer/GPIO/hal_gpio.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  port            1    wreg     enum E2807
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  port            1    4[COMRAM] enum E2807
   389 ;;  ret             1    0        unsigned char 
   390 ;;  ret             1    0        unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      unsigned char 
   393 ;; Registers used:
   394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;Total ram usage:        5 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text2
   414  00FF88                     __ptext2:
   415                           	callstack 0
   416  00FF88                     _gpio_port_toggle_logic:
   417                           	callstack 30
   418                           
   419                           ;incstack = 0
   420                           ;gpio_port_toggle_logic@port stored from wreg
   421  00FF88  6E27               	movwf	gpio_port_toggle_logic@port^0,c
   422  00FF8A                     
   423                           ;MCAL_Layer/GPIO/hal_gpio.c: 287:     if(port > 5 -1)
   424  00FF8A  0E04               	movlw	4
   425  00FF8C  6427               	cpfsgt	gpio_port_toggle_logic@port^0,c
   426  00FF8E  EFCB  F07F         	goto	u151
   427  00FF92  EFCD  F07F         	goto	u150
   428  00FF96                     u151:
   429  00FF96  EFCF  F07F         	goto	l916
   430  00FF9A                     u150:
   431  00FF9A                     
   432                           ;MCAL_Layer/GPIO/hal_gpio.c: 290:     }
   433  00FF9A  EFE1  F07F         	goto	l117
   434  00FF9E                     l916:
   435                           
   436                           ;MCAL_Layer/GPIO/hal_gpio.c: 292:     {;MCAL_Layer/GPIO/hal_gpio.c: 293:         *lat_re
      +                          gisters[port] ^= 0xFF ;
   437  00FF9E  5027               	movf	gpio_port_toggle_logic@port^0,w,c
   438  00FFA0  0D02               	mullw	2
   439  00FFA2  0E0B               	movlw	low _lat_registers
   440  00FFA4  24F3               	addwf	243,w,c
   441  00FFA6  6ED9               	movwf	fsr2l,c
   442  00FFA8  0E00               	movlw	high _lat_registers
   443  00FFAA  20F4               	addwfc	prodh,w,c
   444  00FFAC  6EDA               	movwf	fsr2h,c
   445  00FFAE  CFDE F023          	movff	postinc2,??_gpio_port_toggle_logic
   446  00FFB2  CFDD F024          	movff	postdec2,??_gpio_port_toggle_logic+1
   447  00FFB6  C023  FFD9         	movff	??_gpio_port_toggle_logic,fsr2l
   448  00FFBA  C024  FFDA         	movff	??_gpio_port_toggle_logic+1,fsr2h
   449  00FFBE  0EFF               	movlw	255
   450  00FFC0  1ADF               	xorwf	indf2,f,c
   451  00FFC2                     l117:
   452  00FFC2  0012               	return		;funcret
   453  00FFC4                     __end_of_gpio_port_toggle_logic:
   454                           	callstack 0
   455                           
   456 ;; *************** function _gpio_port_direction_intialize *****************
   457 ;; Defined at:
   458 ;;		line 195 in file "MCAL_Layer/GPIO/hal_gpio.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;  port            1    wreg     enum E2807
   461 ;;  direction       1    0[COMRAM] enum E2793
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  port            1    5[COMRAM] enum E2807
   464 ;;  ret             1    0        unsigned char 
   465 ;;  ret             1    0        unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      unsigned char 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        6 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text3
   489  00FF4C                     __ptext3:
   490                           	callstack 0
   491  00FF4C                     _gpio_port_direction_intialize:
   492                           	callstack 30
   493                           
   494                           ;incstack = 0
   495                           ;gpio_port_direction_intialize@port stored from wreg
   496  00FF4C  6E28               	movwf	gpio_port_direction_intialize@port^0,c
   497  00FF4E                     
   498                           ;MCAL_Layer/GPIO/hal_gpio.c: 198:     if(port > 5 -1)
   499  00FF4E  0E04               	movlw	4
   500  00FF50  6428               	cpfsgt	gpio_port_direction_intialize@port^0,c
   501  00FF52  EFAD  F07F         	goto	u311
   502  00FF56  EFAF  F07F         	goto	u310
   503  00FF5A                     u311:
   504  00FF5A  EFB1  F07F         	goto	l996
   505  00FF5E                     u310:
   506  00FF5E                     
   507                           ;MCAL_Layer/GPIO/hal_gpio.c: 201:     }
   508  00FF5E  EFC3  F07F         	goto	l93
   509  00FF62                     l996:
   510                           
   511                           ;MCAL_Layer/GPIO/hal_gpio.c: 203:     {;MCAL_Layer/GPIO/hal_gpio.c: 204:         *tris_r
      +                          egisters[port] = direction;
   512  00FF62  5028               	movf	gpio_port_direction_intialize@port^0,w,c
   513  00FF64  0D02               	mullw	2
   514  00FF66  0E15               	movlw	low _tris_registers
   515  00FF68  24F3               	addwf	243,w,c
   516  00FF6A  6ED9               	movwf	fsr2l,c
   517  00FF6C  0E00               	movlw	high _tris_registers
   518  00FF6E  20F4               	addwfc	prodh,w,c
   519  00FF70  6EDA               	movwf	fsr2h,c
   520  00FF72  CFDE F024          	movff	postinc2,??_gpio_port_direction_intialize
   521  00FF76  CFDD F025          	movff	postdec2,??_gpio_port_direction_intialize+1
   522  00FF7A  C024  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
   523  00FF7E  C025  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
   524  00FF82  C023  FFDF         	movff	gpio_port_direction_intialize@direction,indf2
   525  00FF86                     l93:
   526  00FF86  0012               	return		;funcret
   527  00FF88                     __end_of_gpio_port_direction_intialize:
   528                           	callstack 0
   529  0000                     
   530                           	psect	rparam
   531  0000                     
   532                           	psect	idloc
   533                           
   534                           ;Config register IDLOC0 @ 0x200000
   535                           ;	unspecified, using default values
   536  200000                     	org	2097152
   537  200000  FF                 	db	255
   538                           
   539                           ;Config register IDLOC1 @ 0x200001
   540                           ;	unspecified, using default values
   541  200001                     	org	2097153
   542  200001  FF                 	db	255
   543                           
   544                           ;Config register IDLOC2 @ 0x200002
   545                           ;	unspecified, using default values
   546  200002                     	org	2097154
   547  200002  FF                 	db	255
   548                           
   549                           ;Config register IDLOC3 @ 0x200003
   550                           ;	unspecified, using default values
   551  200003                     	org	2097155
   552  200003  FF                 	db	255
   553                           
   554                           ;Config register IDLOC4 @ 0x200004
   555                           ;	unspecified, using default values
   556  200004                     	org	2097156
   557  200004  FF                 	db	255
   558                           
   559                           ;Config register IDLOC5 @ 0x200005
   560                           ;	unspecified, using default values
   561  200005                     	org	2097157
   562  200005  FF                 	db	255
   563                           
   564                           ;Config register IDLOC6 @ 0x200006
   565                           ;	unspecified, using default values
   566  200006                     	org	2097158
   567  200006  FF                 	db	255
   568                           
   569                           ;Config register IDLOC7 @ 0x200007
   570                           ;	unspecified, using default values
   571  200007                     	org	2097159
   572  200007  FF                 	db	255
   573                           
   574                           	psect	config
   575                           
   576                           ; Padding undefined space
   577  300000                     	org	3145728
   578  300000  FF                 	db	255
   579                           
   580                           ;Config register CONFIG1H @ 0x300001
   581                           ;	Oscillator Selection bits
   582                           ;	OSC = HS, HS oscillator
   583                           ;	Fail-Safe Clock Monitor Enable bit
   584                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   585                           ;	Internal/External Oscillator Switchover bit
   586                           ;	IESO = OFF, Oscillator Switchover mode disabled
   587  300001                     	org	3145729
   588  300001  02                 	db	2
   589                           
   590                           ;Config register CONFIG2L @ 0x300002
   591                           ;	Power-up Timer Enable bit
   592                           ;	PWRT = OFF, PWRT disabled
   593                           ;	Brown-out Reset Enable bits
   594                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   595                           ;	Brown Out Reset Voltage bits
   596                           ;	BORV = 1, 
   597  300002                     	org	3145730
   598  300002  09                 	db	9
   599                           
   600                           ;Config register CONFIG2H @ 0x300003
   601                           ;	Watchdog Timer Enable bit
   602                           ;	WDT = ON, WDT enabled
   603                           ;	Watchdog Timer Postscale Select bits
   604                           ;	WDTPS = 32768, 1:32768
   605  300003                     	org	3145731
   606  300003  1F                 	db	31
   607                           
   608                           ; Padding undefined space
   609  300004                     	org	3145732
   610  300004  FF                 	db	255
   611                           
   612                           ;Config register CONFIG3H @ 0x300005
   613                           ;	CCP2 MUX bit
   614                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   615                           ;	PORTB A/D Enable bit
   616                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   617                           ;	Low-Power Timer1 Oscillator Enable bit
   618                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   619                           ;	MCLR Pin Enable bit
   620                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   621  300005                     	org	3145733
   622  300005  81                 	db	129
   623                           
   624                           ;Config register CONFIG4L @ 0x300006
   625                           ;	Stack Full/Underflow Reset Enable bit
   626                           ;	STVREN = ON, Stack full/underflow will cause Reset
   627                           ;	Single-Supply ICSP Enable bit
   628                           ;	LVP = OFF, Single-Supply ICSP disabled
   629                           ;	Extended Instruction Set Enable bit
   630                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   631                           ;	Background Debugger Enable bit
   632                           ;	DEBUG = 0x1, unprogrammed default
   633  300006                     	org	3145734
   634  300006  81                 	db	129
   635                           
   636                           ; Padding undefined space
   637  300007                     	org	3145735
   638  300007  FF                 	db	255
   639                           
   640                           ;Config register CONFIG5L @ 0x300008
   641                           ;	Code Protection bit
   642                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   643                           ;	Code Protection bit
   644                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   645                           ;	Code Protection bit
   646                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   647                           ;	Code Protection bit
   648                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   649  300008                     	org	3145736
   650  300008  0F                 	db	15
   651                           
   652                           ;Config register CONFIG5H @ 0x300009
   653                           ;	Boot Block Code Protection bit
   654                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   655                           ;	Data EEPROM Code Protection bit
   656                           ;	CPD = OFF, Data EEPROM not code-protected
   657  300009                     	org	3145737
   658  300009  C0                 	db	192
   659                           
   660                           ;Config register CONFIG6L @ 0x30000A
   661                           ;	Write Protection bit
   662                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   663                           ;	Write Protection bit
   664                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   665                           ;	Write Protection bit
   666                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   667                           ;	Write Protection bit
   668                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   669  30000A                     	org	3145738
   670  30000A  0F                 	db	15
   671                           
   672                           ;Config register CONFIG6H @ 0x30000B
   673                           ;	Configuration Register Write Protection bit
   674                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   675                           ;	Boot Block Write Protection bit
   676                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   677                           ;	Data EEPROM Write Protection bit
   678                           ;	WRTD = OFF, Data EEPROM not write-protected
   679  30000B                     	org	3145739
   680  30000B  E0                 	db	224
   681                           
   682                           ;Config register CONFIG7L @ 0x30000C
   683                           ;	Table Read Protection bit
   684                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   685                           ;	Table Read Protection bit
   686                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   687                           ;	Table Read Protection bit
   688                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   689                           ;	Table Read Protection bit
   690                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   691  30000C                     	org	3145740
   692  30000C  0F                 	db	15
   693                           
   694                           ;Config register CONFIG7H @ 0x30000D
   695                           ;	Boot Block Table Read Protection bit
   696                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   697  30000D                     	org	3145741
   698  30000D  40                 	db	64
   699                           tosu	equ	0xFFF
   700                           tosh	equ	0xFFE
   701                           tosl	equ	0xFFD
   702                           stkptr	equ	0xFFC
   703                           pclatu	equ	0xFFB
   704                           pclath	equ	0xFFA
   705                           pcl	equ	0xFF9
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           prodh	equ	0xFF4
   711                           prodl	equ	0xFF3
   712                           indf0	equ	0xFEF
   713                           postinc0	equ	0xFEE
   714                           postdec0	equ	0xFED
   715                           preinc0	equ	0xFEC
   716                           plusw0	equ	0xFEB
   717                           fsr0h	equ	0xFEA
   718                           fsr0l	equ	0xFE9
   719                           wreg	equ	0xFE8
   720                           indf1	equ	0xFE7
   721                           postinc1	equ	0xFE6
   722                           postdec1	equ	0xFE5
   723                           preinc1	equ	0xFE4
   724                           plusw1	equ	0xFE3
   725                           fsr1h	equ	0xFE2
   726                           fsr1l	equ	0xFE1
   727                           bsr	equ	0xFE0
   728                           indf2	equ	0xFDF
   729                           postinc2	equ	0xFDE
   730                           postdec2	equ	0xFDD
   731                           preinc2	equ	0xFDC
   732                           plusw2	equ	0xFDB
   733                           fsr2h	equ	0xFDA
   734                           fsr2l	equ	0xFD9
   735                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      8      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_direction_intialize
    _main->_gpio_port_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     335
                                              6 COMRAM     2     2      0
      _gpio_port_direction_intialize
             _gpio_port_toggle_logic
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                6     5      1     150
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_toggle_logic                               5     5      0      35
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _gpio_port_direction_intialize                        6     5      1     150
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_port_direction_intialize
   _gpio_port_toggle_logic
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      8      2D       1       35.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      34        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jun 19 15:33:53 2022

                                    l93 FF86                                     l105 FFFE  
                                   l117 FFC2                                     l146 FF28  
                                   l910 FF8A                                     l912 FF8A  
                                   l914 FF9A                                     l916 FF9E  
                                   l990 FF4E                                     l992 FF4E  
                                   l994 FF5E                                     l996 FF62  
                                   u310 FF5E                                     u150 FF9A  
                                   u311 FF5A                                     u151 FF96  
                                   u320 FFD6                                     u321 FFD2  
                                   u337 FF38                                     _ret 002D  
                                   prod 000FF3                                     wreg 000FE8  
                                  l1000 FFC6                                    l1002 FFC6  
                                  l1010 FF14                                    l1004 FFD6  
                                  l1012 FF2E                                    l1006 FFDA  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _LATD 000F8C  
                                  _LATE 000F8D                                    _main FF14  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  prodl 000FF3                                    start 0000  
                          ___param_bank 000000                   _gpio_port_write_logic FFC4  
                                 ?_main 0023                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                                   _btn_1 001F  
                                 _led_1 0022                                   _led_2 0021  
                                 _led_3 0020                                   tablat 000FF5  
gpio_port_direction_intialize@direction 0023                         __initialization FEE4  
                          __end_of_main FF4C                           _lat_registers 000B  
                                ??_main 0029                           __activetblptr 000002  
        ?_gpio_port_direction_intialize 0023               gpio_port_write_logic@port 0028  
               ?_gpio_port_toggle_logic 0023                  ?_gpio_port_write_logic 0023  
                          __pdataCOMRAM 0001                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                            __accesstop 0080                 __end_of__initialization FF0A  
        __end_of_gpio_port_toggle_logic FFC4                           ___rparam_used 000001  
                        __pcstackCOMRAM 0023              gpio_port_toggle_logic@port 0027  
                        _tris_registers 0015                                 __Hparam 0000  
                               __Lparam 0000                                 __pcinit FEE4  
                               _btn1_st 002B                                 __ramtop 1000  
                               __ptext0 FF14                                 __ptext1 FFC4  
                               __ptext2 FF88                                 __ptext3 FF4C  
                  end_of_initialization FF0A                           __Lmediumconst 0000  
       ??_gpio_port_direction_intialize 0024                 ??_gpio_port_write_logic 0024  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                         __pidataCOMRAM FEC2                     start_initialization FEE4  
 __end_of_gpio_port_direction_intialize FF88  __size_of_gpio_port_direction_intialize 003C  
         _gpio_port_direction_intialize FF4C       gpio_port_direction_intialize@port 0028  
                           __pbssCOMRAM 002B                ??_gpio_port_toggle_logic 0023  
        __size_of_gpio_port_write_logic 003C           __end_of_gpio_port_write_logic 0000  
                             copy_data0 FEF8                                __Hrparam 0000  
                              __Lrparam 0000                                _led_1_st 002C  
       __size_of_gpio_port_toggle_logic 003C                           __size_of_main 0038  
                _gpio_port_toggle_logic FF88                          _port_registers 0001  
            gpio_port_write_logic@logic 0023  
